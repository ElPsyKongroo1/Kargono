// Rendering Type: DrawIndex
// Color Type: FlatColor
// Draw Outline: false
//============================================================
// vertex shader
//============================================================
#type vertex
#version 450 core

struct VertexOutput
{
	vec4 Color;
};

layout(location = 0) in vec3 a_Position;
layout(location = 1) in vec4 a_Color;
layout(std140, binding = 0) uniform Camera
{
mat4 u_ViewProjection;
};
layout(location = 0) out VertexOutput Output;

void main()
{
	gl_Position = vec4(a_Position, 1.0);
	Output.Color = a_Color;
	gl_Position = u_ViewProjection * gl_Position;
}


//============================================================
// fragment shader
//============================================================
#type fragment
#version 450 core

struct VertexOutput
{
	vec4 Color;
};

layout(location = 0) in VertexOutput Input;
layout(location = 0) out vec4 o_Color;


void main()
{
	o_Color = vec4(1.0f, 1.0f, 1.0f, 1.0f);
	o_Color *= Input.Color;
}
