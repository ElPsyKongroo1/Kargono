# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: MSBuild

on:
  push:
    branches: [ "**" ]  # Match all branches

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: "Kargono.sln"

permissions:
  contents: read

jobs:
  build:
    runs-on: [Windows, self-hosted]
    strategy:
      fail-fast: false
      matrix:
        build-configuration: [Debug, Release, Dist]
    steps:
    - uses: actions/checkout@v4

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: ./BuildScripts/VS_GenProjects.bat
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{matrix.build-configuration}} ${{env.SOLUTION_FILE_PATH}}
    - name: TestRuntime
      if: always()
      working-directory: ${{env.GITHUB_WORKSPACE}}
      timeout-minutes: 1
      run: | 
        if exist Projects/Pong/Assets/Scripting/Binary (
          echo "Removing cached scripting binaries"
          rmdir /s /q Projects\Pong\Assets\Scripting\Binary
        ) 
        cd Binary/${{matrix.build-configuration}}-windows-x86_64/RuntimeTesting
        ./RuntimeTesting.exe
    - name: TestEditor
      if: always()
      working-directory: ${{env.GITHUB_WORKSPACE}}
      timeout-minutes: 1
      run: | 
        if exist Projects/Pong/Assets/Scripting/Binary (
          echo "Removing cached scripting binaries" && rmdir /s /q Projects\Pong\Assets\Scripting\Binary
        ) 
        cd Binary/${{matrix.build-configuration}}-windows-x86_64/EditorTesting
        ./EditorTesting.exe
    - name: Display Logs
      if: ${{ always() }}
      shell: cmd
      run: |
        if exist Runtime/Log/Kargono.log (
          echo "Here is the log for the TestRuntime Step" && type Runtime\Log\Kargono.log
        ) else (
          echo "Runtime log file does not exist"
        )
        if exist Editor/Log/Kargono.log (
          echo "Here is the log for the EditorRuntime Step" && type Editor\Log\Kargono.log
        ) else (
          echo "Editor log file does not exist"
        )
        exit 0
